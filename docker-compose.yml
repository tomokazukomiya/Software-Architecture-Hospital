services:
  patient_service:
    build:
      context: .
      dockerfile: services/patient_service/Dockerfile
    ports:
      - "8002:8002"
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "python manage.py migrate &&
             python -m uvicorn patient_app.asgi:application --host 0.0.0.0 --port 8002"
    networks:
      - backend
    depends_on:
      - auth_service

  visit_service:
    build:
      context: .
      dockerfile: services/visit_service/Dockerfile
    ports:
      - "8004:8004"
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "python manage.py migrate &&
             python -m uvicorn visit_app.asgi:application --host 0.0.0.0 --port 8004"
    networks:
      - backend
    depends_on:
      - auth_service

  staff_service:
    build:
      context: .
      dockerfile: services/staff_service/Dockerfile
    ports:
      - "8003:8003"
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "python manage.py migrate &&
             python -m uvicorn staff_app.asgi:application --host 0.0.0.0 --port 8003"
    networks:
      - backend
    depends_on:
      - auth_service

  inventory_service:
    build:
      context: .
      dockerfile: services/inventory_service/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "python manage.py migrate &&
             python -m uvicorn inventory_app.asgi:application --host 0.0.0.0 --port 8001"
    networks:
      - backend
    depends_on:
      - auth_service

  auth_service:
    build:
      context: .
      dockerfile: services/auth_service/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "python manage.py migrate &&
             python -m uvicorn auth_app.asgi:application --host 0.0.0.0 --port 8000"
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - auth_service
      - inventory_service
      - staff_service
      - patient_service
      - visit_service

networks:
  backend:
    driver: bridge
